import { Map } from "immutable"
import { Cell } from "./Cell.ts"
import { Option } from "fp-ts/lib/Option"
import { getOption } from "../fp/utils/Map.ts"
import { pipe } from "fp-ts/lib/function"

export function cellToGlyph(cell: Cell): Option<string> {
    return pipe(brailleGlyph, getOption(cell))
}

const brailleGlyph: Map<Cell, string> = Map([
    [Cell.ENTER,   `\n`],
    [Cell.C0,      ` `],
    [Cell.C2346,   `⠮`],
    [Cell.C5,      `⠐`],
    [Cell.C3456,   `⠼`],
    [Cell.C1246,   `⠫`],
    [Cell.C146,    `⠩`],
    [Cell.C12346,  `⠯`],
    [Cell.C3,      `⠄`],
    [Cell.C12356,  `⠷`],
    [Cell.C23456,  `⠾`],
    [Cell.C16,     `⠡`],
    [Cell.C346,    `⠬`],
    [Cell.C6,      `⠠`],
    [Cell.C36,     `⠤`],
    [Cell.C46,     `⠨`],
    [Cell.C34,     `⠌`],
    [Cell.C356,    `⠴`],
    [Cell.C2,      `⠂`],
    [Cell.C23,     `⠆`],
    [Cell.C25,     `⠒`],
    [Cell.C256,    `⠲`],
    [Cell.C26,     `⠢`],
    [Cell.C235,    `⠖`],
    [Cell.C2356,   `⠶`],
    [Cell.C236,    `⠦`],
    [Cell.C35,     `⠔`],
    [Cell.C156,    `⠱`],
    [Cell.C56,     `⠰`],
    [Cell.C126,    `⠣`],
    [Cell.C123456, `⠿`],
    [Cell.C345,    `⠜`],
    [Cell.C1456,   `⠹`],
    [Cell.C4,      `⠈`],
    [Cell.C1,      `⠁`],
    [Cell.C12,     `⠃`],
    [Cell.C14,     `⠉`],
    [Cell.C145,    `⠙`],
    [Cell.C15,     `⠑`],
    [Cell.C124,    `⠋`],
    [Cell.C1245,   `⠛`],
    [Cell.C125,    `⠓`],
    [Cell.C24,     `⠊`],
    [Cell.C245,    `⠚`],
    [Cell.C13,     `⠅`],
    [Cell.C123,    `⠇`],
    [Cell.C134,    `⠍`],
    [Cell.C1345,   `⠝`],
    [Cell.C135,    `⠕`],
    [Cell.C1234,   `⠏`],
    [Cell.C12345,  `⠟`],
    [Cell.C1235,   `⠗`],
    [Cell.C234,    `⠎`],
    [Cell.C2345,   `⠞`],
    [Cell.C136,    `⠥`],
    [Cell.C1236,   `⠧`],
    [Cell.C2456,   `⠺`],
    [Cell.C1346,   `⠭`],
    [Cell.C13456,  `⠽`],
    [Cell.C1356,   `⠵`],
    [Cell.C246,    `⠪`],
    [Cell.C1256,   `⠳`],
    [Cell.C12456,  `⠻`],
    [Cell.C45,     `⠘`],
    [Cell.C456,    `⠸`],
])